syntax = "proto3";
package tx;
option go_package = "github.com/kwilteam/kwil-db/core/rpc/protobuf/tx/v1;txpb";


import "kwil/tx/v1/tx.proto";

message Validator {
    bytes pubkey = 1; // ED25519 PubKey
    int64 power = 2;
}

enum RequestStatus {
    OK = 0;
    ERROR = 1;
}

message ValidatorApprovalRequest {
    bytes PubKey = 1; // ED25519 PubKey
}

message ValidatorApprovalResponse {
    RequestStatus status = 1;
    string log = 2;
}

/*
    If power is 0, the validator will be removed from the validator set
    If power is > 0, if the validator is in the approved validator list, validator will be added to the validator set
    Base64 encoded both pubkey and validator power
*/
// TODO: these should not wrap Transactions; all of these should just get forwarded to the broadcast endpoint
message ValidatorJoinRequest {
    tx.Transaction tx = 1;
}

message ValidatorJoinResponse {
    tx.TransactionStatus receipt = 1;
}

message ValidatorLeaveRequest {
    tx.Transaction tx = 1;
}

message ValidatorLeaveResponse {
    tx.TransactionStatus receipt = 1;
}

message CurrentValidatorsRequest {
}

message CurrentValidatorsResponse {
    repeated Validator validators = 1;
}

message ValidatorJoinStatusRequest {
    bytes pubkey = 1; // ED25519 PubKey
}

message ValidatorJoinStatusResponse {
    repeated bytes approved_validators = 1 [json_name = "approved_validators"];
    repeated bytes pending_validators = 2 [json_name = "pending_validators"];
    int64 power = 3;
}
