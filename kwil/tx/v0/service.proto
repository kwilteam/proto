syntax = "proto3";
package txsvc;
option go_package = "kwil/x/proto/txpb";

import "google/api/annotations.proto";

import "kwil/txsvc/broadcast.proto";
import "kwil/txsvc/executables.proto";
import "kwil/txsvc/list_db.proto";
import "kwil/txsvc/schema.proto";
import "kwil/txsvc/validate.proto";
import "kwil/txsvc/ping.proto";
import "kwil/txsvc/address.proto";

service TxService {
  rpc Broadcast(BroadcastRequest) returns (BroadcastResponse) {
    option (google.api.http) = {
        post: "/api/v0/broadcast",
        body: "*"
    };
  }
  
  rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse) {
      option (google.api.http) = {
          get: "/api/v0/{owner}/{name}/schema"
      };
  }

  rpc GetSchemaById(GetSchemaByIdRequest) returns (GetSchemaResponse) {
      option (google.api.http) = {
          get: "/api/v0/{id}/schema"
      };
  }

  rpc ListDatabases(ListDatabasesRequest) returns (ListDatabasesResponse) {
      option (google.api.http) = {
          get: "/api/v0/{owner}/databases"
      };
  }

  rpc GetExecutables(GetExecutablesRequest) returns (GetExecutablesResponse) {
      option (google.api.http) = {
          get: "/api/v0/{owner}/{name}/executables"
      };
  }

  rpc GetExecutablesById(GetExecutablesByIdRequest) returns (GetExecutablesResponse) {
      option (google.api.http) = {
          get: "/api/v0/{id}/executables"
      };
  }

  rpc ValidateSchema(ValidateSchemaRequest) returns (ValidateSchemaResponse) {
      option (google.api.http) = {
          post: "/api/v0/schema/validate",
          body: "*"
      };
  }

  rpc Ping(PingRequest) returns (PongResponse) {
      option (google.api.http) = {
          get: "/api/v0/ping"
      };
    }

    rpc GetAddress(GetAddressRequest) returns (GetAddressResponse) {
      option (google.api.http) = {
          get: "/api/v0/address"
      };
    }
}